//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFlex.DOCs.References.EtalonDetailAndAssebly
{
	using System;
	using TFlex.DOCs.Model.References;
	using TFlex.DOCs.Model.Structure;
	using TFlex.DOCs.Model.References.Links;
	using TFlex.DOCs.Model.Classes;
	using TFlex.DOCs.Model.Parameters;
    using TFlex.DOCs.Model.References.Nomenclature;


    /// <summary>
    /// Представляет объект справочника "Эталонные детали и сборки"
    /// </summary>
    public partial class EtalonDetailAndAsseblingReferenceObject
	{
		
		internal EtalonDetailAndAsseblingReferenceObject(EtalonDetailAndAsseblingReference reference) : 
				base(reference)
		{
			this.refDocument = this.Reference.Connection.ReferenceCatalog.Find(SpecialReference.Documents).CreateReference();
			this.refNomenclature = this.Reference.Connection.ReferenceCatalog.Find(SpecialReference.Nomenclature).CreateReference() as NomenclatureReference;
		}
		
		/// <summary>
		/// Возвращает описание типа объекта
		/// </summary>
		public new EtalonDetailAndAsseblingType Class
		{
			get
			{
				return ((EtalonDetailAndAsseblingType)(base.Class));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Наименование"
		/// </summary>
		public StringParameter Name
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.Name]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Обозначение"
		/// </summary>
		public StringParameter Denotation
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.Denotation]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Покупное"
		/// </summary>
		public BooleanParameter IsBuying
		{
			get
			{
				return ((BooleanParameter)(this[FieldKeys.IsBuying]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Конечное изделие"
		/// </summary>
		public BooleanParameter IsFinalProduct
		{
			get
			{
				return ((BooleanParameter)(this[FieldKeys.IsFinalProduct]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Литера"
		/// </summary>
		public StringParameter Litera
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.Litera]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Формат"
		/// </summary>
		public StringParameter Format
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.Format]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Тип"
		/// </summary>
		public StringParameter Type
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.Type]));
			}
		}
		
		/// <summary>
		/// Возвращает или задаёт связанный объект справочника "Материалы" по связи "Материалы"
		/// </summary>
		public ReferenceObject Material
		{
			get
			{
				return GetObject(RelationKeys.Material);
			}
			set
			{
				SetLinkedObject(RelationKeys.Material, value);
			}
		}
		
		/// <summary>
		/// Возвращает или задаёт связанный объект справочника "Номенклатура ERP" по связи "Номенклатура ERP ДиС"
		/// </summary>
		public ReferenceObject Nomenclature
		{
			get
			{
				return GetObject(RelationKeys.Nomenclature);
			}
			set
			{
				SetLinkedObject(RelationKeys.Nomenclature, value);
			}
		}
		
		/// <summary>
		/// Возвращает связанные объекты справочника "Справочник эквивалентов MDM" по связи "Эквиваленты деталей и сборок MDM"
		/// </summary>
		public ReferenceObjectCollection Equivalent
		{
			get
			{
				return Links.ToMany[RelationKeys.Equivalent].Objects;
			}
		}
		
		/// <summary>
		/// Подключает объект справочника "Справочник эквивалентов MDM" по связи "Эквиваленты деталей и сборок MDM"
		/// </summary>
		/// <param name="newLinkedObject">
		/// Подключаемый объект
		/// </param>
		/// <returns>
		/// Подключённый объект
		/// </returns>
		public ReferenceObject AddEquivalent(ReferenceObject newLinkedObject)
		{
			return AddLinkedObject(RelationKeys.Equivalent, newLinkedObject);
		}
		
		/// <summary>
		/// Отключает объект справочника "Справочник эквивалентов MDM" по связи "Эквиваленты деталей и сборок MDM"
		/// </summary>
		/// <param name="linkedObject">
		/// Связанный объект
		/// </param>
		/// <returns>
		/// true, если объект был отключен
		/// </returns>
		public Boolean RemoveEquivalent(ReferenceObject linkedObject)
		{
			return RemoveLinkedObject(RelationKeys.Equivalent, linkedObject);
		}
		
		/// <summary>
		/// Уникальные идентификаторы (GUID) параметров справочника "Эталонные детали и сборки"
		/// </summary>
		public class FieldKeys
		{
			
			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Наименование"
			/// </summary>
		   public static readonly Guid Name = new Guid("b7eb593c-575e-4b78-8d7d-fe5be0af8996");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Обозначение"
			/// </summary>
		   public static readonly Guid Denotation = new Guid("ab578d46-dc1c-4045-bbee-b39be6dd230a");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Покупное"
			/// </summary>
		   public static readonly Guid IsBuying = new Guid("b5f317cf-40da-421e-bedf-8f818ff8e553");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Конечное изделие"
			/// </summary>
		   public static readonly Guid IsFinalProduct = new Guid("91fc9c27-985c-4536-9335-3c8e46c66a1e");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Литера"
			/// </summary>
		   public static readonly Guid Litera = new Guid("0740a359-baa6-4abc-8a58-702178ab77a9");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Формат"
			/// </summary>
		   public static readonly Guid Format = new Guid("d613e2a8-09ec-4437-9e29-0a631b7d20e6");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Тип"
			/// </summary>
		   public static readonly Guid Type = new Guid("73dc09d9-558d-4ef2-8a4a-5aed283840e1");

		}
		
		/// <summary>
		/// Уникальные идентификаторы (GUID) связей и списков объектов справочника "Эталонные детали и сборки"
		/// </summary>
		public class RelationKeys
		{
			
			/// <summary>
			/// Представляет уникальный идентификатор (GUID) связи "Материалы"
			/// </summary>
		   public static readonly Guid Material = new Guid("8cd21dbf-aa91-48be-b338-8a2858ceebf1");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) связи "Номенклатура ERP ДиС"
			/// </summary>
		   public static readonly Guid Nomenclature = new Guid("8a3eafb2-2442-4556-82a8-58ea50ee690e");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) связи "Эквиваленты деталей и сборок MDM"
			/// </summary>
		   public static readonly Guid Equivalent = new Guid("a964c39a-cb78-448b-b3f7-57440717a7a2");

		}
	}
}
