//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFlex.DOCs.References.NomenclatureERP
{
    using System;
    using TFlex.DOCs.Model.References;
    using TFlex.DOCs.Model.Structure;
    using TFlex.DOCs.Model.References.Links;
    using TFlex.DOCs.Model.Classes;
    using TFlex.DOCs.Model.Parameters;


    /// <summary>
    /// Представляет объект справочника "Номенклатура ERP"
    /// </summary>
    public partial class NomenclatureERPReferenceObject
    {

        internal NomenclatureERPReferenceObject(NomenclatureERPReference reference) :
                base(reference)
        {
        }

        /// <summary>
        /// Возвращает описание типа объекта
        /// </summary>
        public new NomenclatureERPType Class
        {
            get
            {
                return ((NomenclatureERPType)(base.Class));
            }
        }

        /// <summary>
        /// Возвращает параметр "Наименование"
        /// </summary>
        public StringParameter Name
        {
            get
            {
                return ((StringParameter)(this[FieldKeys.Name]));
            }
        }

        /// <summary>
        /// Возвращает параметр "Обозначение"
        /// </summary>
        public StringParameter Denotation
        {
            get
            {
                return ((StringParameter)(this[FieldKeys.Denotation]));
            }
        }

        /// <summary>
        /// Возвращает параметр "Вес"
        /// </summary>
        public DoubleParameter Weight
        {
            get
            {
                return ((DoubleParameter)(this[FieldKeys.Weight]));
            }
        }

        /// <summary>
        /// Возвращает параметр "GUID(1C)"
        /// </summary>
        public GuidParameter GUID1C
        {
            get
            {
                return ((GuidParameter)(this[FieldKeys.GUID1C]));
            }
        }

        /// <summary>
        /// Возвращает параметр "GUID(T-FLEX)"
        /// </summary>
        public GuidParameter GUIDTFLEX
        {
            get
            {
                return ((GuidParameter)(this[FieldKeys.GUIDTFLEX]));
            }
        }

        /// <summary>
        /// Возвращает параметр "КодЕламед"
        /// </summary>
        public StringParameter CodeElamed
        {
            get
            {
                return (StringParameter)this[FieldKeys.CodeElamed];
            }
        }

        /// <summary>
        /// Возвращает параметр "Типовое"
        /// </summary>
        public BooleanParameter IsTypical
        {
            get
            {
                return (BooleanParameter)this[FieldKeys.IsTypical];
            }
        }
        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Товарные категории изделий" по связи "Товарная категория"
        /// </summary>
        public ReferenceObject ProductCategory
        {
            get
            {
                return GetObject(RelationKeys.ProductCategory);
            }
            set
            {
                SetLinkedObject(RelationKeys.ProductCategory, value);
            }
        }

        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Группы списка" по связи "Группа списка"
        /// </summary>
        public ReferenceObject GroupList
        {
            get
            {
                return GetObject(RelationKeys.GroupList);
            }
            set
            {
                SetLinkedObject(RelationKeys.GroupList, value);
            }
        }

        /// <summary>
        /// Возвращает или задает связанный объект справочника "Группа финансового учета номенклатуры"
        /// </summary>
        public ReferenceObject GroupFinanceNomenclature
        {
            get
            {
                return GetObject(RelationKeys.GroupFinanceNomenclature);
            }
            set
            {
                SetLinkedObject(RelationKeys.GroupFinanceNomenclature, value);
            }
        }
        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Типы воспроизводства" по связи "Тип воспроизводства"
        /// </summary>
        public ReferenceObject TypeReproduction
        {
            get
            {
                return GetObject(RelationKeys.TypeReproduction);
            }
            set
            {
                SetLinkedObject(RelationKeys.TypeReproduction, value);
            }
        }

        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Типы номенклатуры" по связи "Тип номенклатуры"
        /// </summary>
        public ReferenceObject TypeNomenclature
        {
            get
            {
                return GetObject(RelationKeys.TypeNomenclature);
            }
            set
            {
                SetLinkedObject(RelationKeys.TypeNomenclature, value);
            }
        }

        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Единицы измерения 1C" по связи "Единица измерения"
        /// </summary>
        public ReferenceObject UnitsOfMeasurement
        {
            get
            {
                return GetObject(RelationKeys.UnitsOfMeasurement);
            }
            set
            {
                SetLinkedObject(RelationKeys.UnitsOfMeasurement, value);
            }
        }

        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Единицы измерения 1C" по связи "Единицы измерения веса"
        /// </summary>
        public ReferenceObject UnitOfMeasurementWeight
        {
            get
            {
                return GetObject(RelationKeys.UnitOfMeasurementWeight);
            }
            set
            {
                SetLinkedObject(RelationKeys.UnitOfMeasurementWeight, value);
            }
        }

        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Электронная структура изделий" по связи "Номенклатура"
        /// </summary>
        public ReferenceObject Nomenclature
        {
            get
            {
                return GetObject(RelationKeys.Nomenclature);
            }
            set
            {
                SetLinkedObject(RelationKeys.Nomenclature, value);
            }
        }

        /// <summary>
        /// Возвращает или задаёт связанный объект справочника "Применение материала" по связи "Используемые материалы"
        /// </summary>
        //public ReferenceObject MaterialUsed
        //{
        //    get
        //    {
        //        return GetObject(RelationKeys.MaterialUsed);
        //    }
        //    set
        //    {
        //        SetLinkedObject(RelationKeys.MaterialUsed, value);
        //    }
        //}

        /// <summary>
        /// Возвращает или задаёт связанный объекты справочника "Применение материала" по связи "Используемые материалы"
        /// </summary>
        //public ReferenceObjectCollection MaterialsUsed
        //{
        //    get
        //    {
        //        return Links.ToMany[RelationKeys.MaterialUsed].Objects;
        //    }
        //}
        /// <summary>
		/// Подключает объект справочника "Применение материалов" по связи "Используемые материалы"
		/// </summary>
		/// <param name="addObject">
		/// Подключаемый объект
		/// </param>
		/// <returns>
		/// Подключённый объект
		/// </returns>
        //public ReferenceObject AddMaterialUsed(ReferenceObject addObject)
        //{
        //    return AddLinkedObject(RelationKeys.MaterialUsed, addObject);
        //}

        /// <summary>
		/// Отключает объект справочника "Номенклатура ERP" по связи "Набор подключений"
		/// </summary>
		/// <param name="linkedObject">
		/// Связанный объект
		/// </param>
		/// <returns>
		/// true, если объект был отключен
		/// </returns>
		//public Boolean RemoveMaterialUsed(ReferenceObject linkedObject)
  //      {
  //          return RemoveLinkedObject(RelationKeys.MaterialUsed, linkedObject);
  //      }

        /// <summary>
        /// Уникальные идентификаторы (GUID) параметров справочника "Номенклатура ERP"
        /// </summary>
        public class FieldKeys
        {

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) параметра "Наименование"
            /// </summary>
            public static readonly Guid Name = new Guid("0cd50190-89d3-42bc-ac86-0910eee00d80");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) параметра "Обозначение"
            /// </summary>
            public static readonly Guid Denotation = new Guid("d3c3f4eb-011b-4e3f-a9ab-5c612d8ddc6d");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) параметра "Вес"
            /// </summary>
            public static readonly Guid Weight = new Guid("686d7cf4-c559-4cfb-b775-09df19b4ffe8");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) параметра "GUID(1C)"
            /// </summary>
            public static readonly Guid GUID1C = new Guid("674e6c4d-a713-4a92-94aa-3b3eeb09bcd0");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) параметра "GUID(T-FLEX)"
            /// </summary>
            public static readonly Guid GUIDTFLEX = new Guid("4dfaf3ee-e47f-44cc-8dca-8da8b4a0e4a6");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) параметра "КодЕламед"
            /// </summary>
            public readonly static Guid CodeElamed = new Guid("249171d8-0b8a-4623-9072-8cbbcbe00934");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) параметра "Типовое"
            /// </summary>
            public readonly static Guid IsTypical = new Guid("6602adfc-6ade-4eda-978e-363362a7babe");

        }

        /// <summary>
        /// Уникальные идентификаторы (GUID) связей и списков объектов справочника "Номенклатура ERP"
        /// </summary>
        public class RelationKeys
        {

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Товарная категория"
            /// </summary>
            public static readonly Guid ProductCategory = new Guid("a45a8a4e-3ad5-4959-b90b-f1e75ec1116f");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Группа списка"
            /// </summary>
            public static readonly Guid GroupList = new Guid("0c8c7a41-4b54-41cd-9774-0cc900e113fe");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Тип воспроизводства"
            /// </summary>
            public static readonly Guid TypeReproduction = new Guid("dd89ae41-e111-4981-aff6-06918e5db036");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Тип номенклатуры"
            /// </summary>
            public static readonly Guid TypeNomenclature = new Guid("384b10fc-a257-4fea-b130-c1a035a630cd");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Единица измерения"
            /// </summary>
            public static readonly Guid UnitsOfMeasurement = new Guid("3cdc128c-486e-4234-8fa6-62c248790516");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Номенклатура"
            /// </summary>
            public static readonly Guid Nomenclature = new Guid("b0c79258-a68e-486c-8470-1bf272466ad5");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Используемые материалы"
            /// </summary>
            //public static readonly Guid MaterialUsed = new Guid("f4216316-ce4f-4017-8cab-9a701817ee9b");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Единицы измерения веса"
            /// </summary>
            public static readonly Guid UnitOfMeasurementWeight = new Guid("c90cdee4-2b83-4d9c-8010-ab245d265b21");

            /// <summary>
            /// Представляет уникальный идентификатор (GUID) связи "Группа финансового учета номенклатуры"
            /// </summary>
            public static readonly Guid GroupFinanceNomenclature = new Guid("4d8bbde9-bd7d-4565-a437-b2b21baf84df");

        }
    }
}
