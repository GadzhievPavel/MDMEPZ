//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFlex.DOCs.References.ConnectionNomenclatures
{
	using System;
	using TFlex.DOCs.Model.References;
	using TFlex.DOCs.Model.Structure;
	using TFlex.DOCs.Model.References.Links;
	using TFlex.DOCs.Model.Classes;
	using TFlex.DOCs.Model.Parameters;
	
	
	/// <summary>
	/// Представляет объект справочника "Подключение номенклатур"
	/// </summary>
	public partial class ConnectionNomenclaturesReferenceObject
	{
		
		internal ConnectionNomenclaturesReferenceObject(ConnectionNomenclaturesReference reference) : 
				base(reference)
		{
		}
		
		/// <summary>
		/// Возвращает описание типа объекта
		/// </summary>
		public new ConnectionNomenclaturesType Class
		{
			get
			{
				return ((ConnectionNomenclaturesType)(base.Class));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Наименование"
		/// </summary>
		public StringParameter Name
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.Name]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Количество"
		/// </summary>
		public DoubleParameter Amount
		{
			get
			{
				return ((DoubleParameter)(this[FieldKeys.Amount]));
			}
		}
		
		/// <summary>
		/// Возвращает связанные объекты справочника "Номенклатура ERP" по связи "Текущий объект"
		/// </summary>
		public ReferenceObjectCollection CurrentObject
		{
			get
			{
				return Links.ToMany[RelationKeys.CurrentObject].Objects;
			}
		}
		
		/// <summary>
		/// Возвращает связанные объекты справочника "Номенклатура ERP" по связи "Дочерний объект"
		/// </summary>
		public ReferenceObjectCollection ChildrenNomenclature
		{
			get
			{
				return Links.ToMany[RelationKeys.ChildrenNomenclature].Objects;
			}
		}
		
		/// <summary>
		/// Подключает объект справочника "Номенклатура ERP" по связи "Текущий объект"
		/// </summary>
		/// <param name="newLinkedObject">
		/// Подключаемый объект
		/// </param>
		/// <returns>
		/// Подключённый объект
		/// </returns>
		public ReferenceObject AddCurrentObject(ReferenceObject newLinkedObject)
		{
			return AddLinkedObject(RelationKeys.CurrentObject, newLinkedObject);
		}
		
		/// <summary>
		/// Отключает объект справочника "Номенклатура ERP" по связи "Текущий объект"
		/// </summary>
		/// <param name="linkedObject">
		/// Связанный объект
		/// </param>
		/// <returns>
		/// true, если объект был отключен
		/// </returns>
		public Boolean RemoveCurrentObject(ReferenceObject linkedObject)
		{
			return RemoveLinkedObject(RelationKeys.CurrentObject, linkedObject);
		}
		
		/// <summary>
		/// Подключает объект справочника "Номенклатура ERP" по связи "Дочерний объект"
		/// </summary>
		/// <param name="newLinkedObject">
		/// Подключаемый объект
		/// </param>
		/// <returns>
		/// Подключённый объект
		/// </returns>
		public ReferenceObject AddChildrenNomenclature(ReferenceObject newLinkedObject)
		{
			return AddLinkedObject(RelationKeys.ChildrenNomenclature, newLinkedObject);
		}
		
		/// <summary>
		/// Отключает объект справочника "Номенклатура ERP" по связи "Дочерний объект"
		/// </summary>
		/// <param name="linkedObject">
		/// Связанный объект
		/// </param>
		/// <returns>
		/// true, если объект был отключен
		/// </returns>
		public Boolean RemoveChildrenNomenclature(ReferenceObject linkedObject)
		{
			return RemoveLinkedObject(RelationKeys.ChildrenNomenclature, linkedObject);
		}
		
		/// <summary>
		/// Уникальные идентификаторы (GUID) параметров справочника "Подключение номенклатур"
		/// </summary>
		public class FieldKeys
		{
			
			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Наименование"
			/// </summary>
		   public static readonly Guid Name = new Guid("983e2019-86d9-45d7-9125-292df6b8f9db");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Количество"
			/// </summary>
		   public static readonly Guid Amount = new Guid("e584bc1b-bb87-43eb-8166-c06815df1bbf");

		}
		
		/// <summary>
		/// Уникальные идентификаторы (GUID) связей и списков объектов справочника "Подключение номенклатур"
		/// </summary>
		public class RelationKeys
		{
			
			/// <summary>
			/// Представляет уникальный идентификатор (GUID) связи "Текущий объект"
			/// </summary>
		   public static readonly Guid CurrentObject = new Guid("ac93d4dd-cbe0-4bfe-af35-4765a600952b");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) связи "Дочерний объект"
			/// </summary>
		   public static readonly Guid ChildrenNomenclature = new Guid("8c366b36-6284-49c5-8e5a-17d48ec3a10d");

		}
	}
}
