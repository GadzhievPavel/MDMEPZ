//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFlex.DOCs.References.ConnectionNomenclatures
{
	using System;
	using TFlex.DOCs.Model.References;
	using TFlex.DOCs.Model.Structure;
	using TFlex.DOCs.Model.References.Links;
	using TFlex.DOCs.Model.Classes;
	using TFlex.DOCs.Model.Parameters;
	
	
	/// <summary>
	/// Представляет объект справочника "Подключение номенклатур"
	/// </summary>
	public partial class ConnectionNomenclaturesReferenceObject
	{
		
		internal ConnectionNomenclaturesReferenceObject(ConnectionNomenclaturesReference reference) : 
				base(reference)
		{
		}
		
		/// <summary>
		/// Возвращает описание типа объекта
		/// </summary>
		public new ConnectionNomenclaturesType Class
		{
			get
			{
				return ((ConnectionNomenclaturesType)(base.Class));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "Количество"
		/// </summary>
		public DoubleParameter Amount
		{
			get
			{
				return ((DoubleParameter)(this[FieldKeys.Kolichestvo]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "дочерний объект"
		/// </summary>
		public StringParameter ChildParam
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.ChildrenParam]));
			}
		}
		
		/// <summary>
		/// Возвращает параметр "родительский объект"
		/// </summary>
		public StringParameter CurrentParam
		{
			get
			{
				return ((StringParameter)(this[FieldKeys.CurrentParam]));
			}
		}
		
		/// <summary>
		/// Возвращает или задаёт связанный объект справочника "Номенклатура ERP" по связи "Текущий объект"
		/// </summary>
		public ReferenceObject Current
		{
			get
			{
				return GetObject(RelationKeys.Current);
			}
			set
			{
				SetLinkedObject(RelationKeys.Current, value);
			}
		}
		
		/// <summary>
		/// Возвращает или задаёт связанный объект справочника "Номенклатура ERP" по связи "Дочерний объект"
		/// </summary>
		public ReferenceObject Child
		{
			get
			{
				return GetObject(RelationKeys.Children);
			}
			set
			{
				SetLinkedObject(RelationKeys.Children, value);
			}
		}
		
		/// <summary>
		/// Уникальные идентификаторы (GUID) параметров справочника "Подключение номенклатур"
		/// </summary>
		public class FieldKeys
		{
			
			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "Количество"
			/// </summary>
		   public static readonly Guid Kolichestvo = new Guid("e584bc1b-bb87-43eb-8166-c06815df1bbf");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "дочерний объект"
			/// </summary>
		   public static readonly Guid ChildrenParam = new Guid("05bb4dc5-6d87-4124-b398-d8823d4155f5");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) параметра "родительский объект"
			/// </summary>
		   public static readonly Guid CurrentParam = new Guid("355c3a94-43cf-4dd3-8eb2-3456a3e11749");

		}
		
		/// <summary>
		/// Уникальные идентификаторы (GUID) связей и списков объектов справочника "Подключение номенклатур"
		/// </summary>
		public class RelationKeys
		{
			
			/// <summary>
			/// Представляет уникальный идентификатор (GUID) связи "Текущий объект"
			/// </summary>
		   public static readonly Guid Current = new Guid("cda1e218-5dbb-485a-b35f-df920ebd8ca6");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) связи "Дочерний объект"
			/// </summary>
		   public static readonly Guid Children = new Guid("00678c93-cd81-4a0c-88e7-c4775da7f976");

		}
	}
}
